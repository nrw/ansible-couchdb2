---
- name: if already installed, ensure CouchDB is not running (otherwise, the Erlang processes get in the way)
  service: name=couchdb state=stopped
  ignore_errors: yes

- name: enable the EPEL repo
  yum: name=epel-release

- name: download the source code for Mozilla SpiderMonkey 1.85
  get_url: force=no url=http://ftp.mozilla.org/pub/mozilla.org/js/js185-1.0.0.tar.gz dest=/tmp/js185-1.0.0.tar.gz

- name: unarchive the tar file
  shell: chdir=/tmp tar -xzf js185-1.0.0.tar.gz

- name: ensure zip is installed
  yum: name=zip

- name: install the 'Development tools' package group
  yum: name="@Development tools" state=present

- name: install libselinux-python
  yum: name=libselinux-python

- name: compile Mozilla SpiderMonkey 1.8.5
  shell: chdir=/tmp/js-1.8.5/js/src {{ item }}
  with_items:
  - ./configure
  - make --silent
  - make install --silent

- name: copy the SpiderMonkey header files to a location that CouchDB can read.
  shell: cp -rf /usr/local/include/js /usr/include/js

- name: add a ld.so config for the folder /usr/local/lib
  copy: src=usrlocal.conf dest=/etc/ld.so.conf.d/usrlocal.conf

- name: run ldconfig
  shell: /sbin/ldconfig

- name: download Erlang 18 from Erlang Solutions
  get_url: url=https://packages.erlang-solutions.com/erlang/esl-erlang/FLAVOUR_1_general/esl-erlang_18.3-1~centos~7_amd64.rpm
  args:
    dest: /opt/esl-erlang_18.3-1~centos~7_amd64.rpm
    force: no

- name: install Erlang 18
  yum: name=/opt/esl-erlang_18.3-1~centos~7_amd64.rpm

- name: Install libicu-devel
  yum: name=libicu-devel state=installed

- name: install xz
  yum: name=xz

- name: download the node.js distribution
  get_url: force=no url=https://nodejs.org/dist/v4.2.4/node-v4.2.4-linux-x64.tar.xz dest=/opt
  tags: download_node

- name: untar the node.js distribution
  shell: tar xf node-v4.2.4-linux-x64.tar.xz chdir=/opt
  tags: install_node

- name: create the symlinks for the node tools
  file: path=/usr/bin/{{ item }} src=/opt/node-v4.2.4-linux-x64/bin/{{ item }} state=link
  with_items:
  - node
  - npm
  tags: link_node

- name: ensure Python pip is installed
  yum: name=python-pip

- name: ensure sphinx is installed
  pip: name=sphinx

- name: ensure Tex is installed
  yum: name='@Tex Support'

- name: ensure texinfo is installed
  yum: name=texinfo

- name: ensure git is installed
  yum: name=git

- name: checkout the CouchDB sources from the git repo
  git: repo=https://github.com/apache/couchdb dest=/tmp/couchdb force=yes version={{ git_version }}
  tags: "checkout_couchdb"

- name: execute configure
  command: ./configure --disable-docs
  args:
    chdir: /tmp/couchdb

- name: ensure epmd is not running
  command: pkill epmd
  ignore_errors: yes

- name: execute make
  command: make
  args:
    chdir: /tmp/couchdb

- name: execute make install
  command: make install
  args:
    chdir: /tmp/couchdb

- name: change the bind ports to allow external access
  copy: src=local.ini dest=/usr/local/lib/couchdb/etc/local.ini

- name: change the vm.args file
  template: src=vm.args.j2 dest=/usr/local/lib/couchdb/etc/vm.args

- name: install the sysv script to run CouchDB as a service
  copy: src=couchdb dest=/etc/init.d/couchdb mode=0755

- name: start CouchDB and ensure it is enabled at boot time
  service: name=couchdb state=started enabled=yes

- name: install httplib2
  yum: name=python-httplib2
  tags: install_httplib2

- wait_for: port=5984

- name: check that we can ping CouchDB on all its ports
  uri:
    url: http://127.0.0.1:{{ item }}
    method: GET
    status_code: 200
  with_items:
  - 5986
  - 5984

- include: configure-cluster.yaml
  when: configure_cluster
  tags: configure_cluster
